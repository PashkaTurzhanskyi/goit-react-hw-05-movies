{"version":3,"file":"static/js/820.c910bcf8.chunk.js","mappings":"6LAAO,IAAMA,EAAW,gCACXC,EAAU,kC,+FCmDvB,UA/Ce,WAAO,IAAD,EACnB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAK,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GAC3C,GAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAA8CF,EAAAA,EAAAA,UAAS,IAAvD,eAAOG,EAAP,KAAwBC,EAAxB,KACMC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACRT,GACEU,EAAAA,EAAAA,IAAA,UACUf,EAAAA,EADV,8BACwCK,EADxC,oBACyDJ,EAAAA,IACtDe,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcN,EAAmBM,EAAKC,QAAtC,IACLC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACjB,GAAE,CAACf,IASJ,OACE,4BACE,kBAAMkB,SAPW,SAAAC,GACnBA,EAAEC,iBACFjB,GAAeJ,EAAgB,CAAEC,MAAOG,GACzC,EAIG,WACE,kBACEkB,KAAK,OACLC,MAAOnB,EACPoB,aAAa,MACbC,WAAS,EACTC,SAfkB,SAAAN,GAAC,OAAIf,EAAee,EAAEO,OAAOJ,MAAMK,cAAlC,KAiBrB,mBAAQN,KAAK,SAAb,SAAsB,eAExB,wBACGhB,EAAgBuB,KAAI,SAAAC,GAAK,OACxB,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKD,EAAME,IAAMC,MAAO,CAAEC,KAAM1B,GAAxC,SACGsB,EAAMK,SAFFL,EAAME,GADS,QAUjC,C","sources":["components/service.jsx","pages/Movies/Movies.js"],"sourcesContent":["export const BASE_URL = 'https://api.themoviedb.org/3/';\nexport const API_KEY = '51103b4e400ad80867dbac8add08ee9b';\n","import axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { BASE_URL, API_KEY } from 'components/service';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n  const [searchQuery, setSearchQuery] = useState('');\n  const [listFoundMovies, setListFoundMovies] = useState([]);\n  const location = useLocation();\n\n  useEffect(() => {\n    query &&\n      axios\n        .get(`${BASE_URL}search/movie?query=${query}&api_key=${API_KEY}`)\n        .then(({ data }) => setListFoundMovies(data.results))\n        .catch(error => console.log(error));\n  }, [query]);\n\n  const handleInputChange = e => setSearchQuery(e.target.value.toLowerCase());\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    searchQuery && setSearchParams({ query: searchQuery });\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          value={searchQuery}\n          autoComplete=\"off\"\n          autoFocus\n          onChange={handleInputChange}\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n      <ul>\n        {listFoundMovies.map(movie => (\n          <li key={movie.id}>\n            <Link to={`${movie.id}`} state={{ from: location }}>\n              {movie.title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["BASE_URL","API_KEY","useSearchParams","searchParams","setSearchParams","query","get","useState","searchQuery","setSearchQuery","listFoundMovies","setListFoundMovies","location","useLocation","useEffect","axios","then","data","results","catch","error","console","log","onSubmit","e","preventDefault","type","value","autoComplete","autoFocus","onChange","target","toLowerCase","map","movie","to","id","state","from","title"],"sourceRoot":""}