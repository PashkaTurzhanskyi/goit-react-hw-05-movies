{"version":3,"file":"static/js/499.e0a92d05.chunk.js","mappings":"6LAAO,IAAMA,EAAW,gCACXC,EAAU,kC,iJCEVC,EAAcC,EAAAA,GAAAA,IAAH,4DAKXC,GAASD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,uV,SCoDnB,EAtDqB,WAAO,IAAD,IACjBG,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwCE,EAAAA,EAAAA,UAAS,CAAC,GAAlD,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAsBC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KAS3D,OAPAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,EAAAA,IAAA,UACUlB,EAAAA,EADV,kBAC4BM,EAD5B,oBAC+CL,EAAAA,IAC5CkB,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcV,EAAgBU,EAA9B,IACLC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,GAAE,CAAChB,KAGF,iCACE,SAACF,EAAD,CAAQqB,GAAIZ,EAAoBa,QAAhC,SAAyC,aACzC,UAACxB,EAAD,YACE,yBAAMO,EAAakB,cAAe,gBAChCC,IAAG,yCAAoCnB,EAAakB,aACpDE,IAAKpB,EAAaqB,MAClBC,MAAM,aAER,4BACA,0BACGtB,EAAaqB,MACb,KACArB,EAAauB,cAAgBvB,EAAauB,aAAaC,MAAM,EAAG,GAChE,QAEH,yBAAG,eAAaC,KAAKC,MAAkC,GAA5B1B,EAAa2B,cAAmB,QAC3D,wBAAI,cACJ,uBAAI3B,EAAa4B,YACjB,wBAAI,YACJ,uBACG5B,EAAa6B,QAAU7B,EAAa6B,OAAOC,KAAI,SAAAC,GAAC,OAAIA,EAAEC,KAAO,GAAb,aAIrD,uBAAG,4BACH,2BACE,yBACE,SAAC,KAAD,CAAMhB,GAAG,OAAT,SAAgB,YAElB,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,SAAmB,kBAGvB,SAAC,EAAAiB,SAAD,CAAUC,UAAU,yBAAK,eAAzB,UACE,SAAC,KAAD,QAIP,C","sources":["components/service.jsx","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.js"],"sourcesContent":["export const BASE_URL = 'https://api.themoviedb.org/3/';\nexport const API_KEY = '51103b4e400ad80867dbac8add08ee9b';\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Description = styled.div`\n    display: flex;\n    gap: 20px;\n`\n\nexport const Button = styled(Link)`\n    display: flex;\n    text-align: center;\n    justify-content: center;\n    align-items: center;\n    text-decoration: none;\n    color: white;\n    width: 150px;\n    height: 30px;\n    /* border: 1px solid red; */\n    background-color: gray;\n    margin-bottom: 10px;\n    &:hover{\n        color: black;\n    }\n`","import { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { Suspense, useEffect, useRef, useState } from 'react';\nimport axios from 'axios';\nimport { BASE_URL, API_KEY } from 'components/service';\nimport { Description, Button } from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState({});\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    axios\n      .get(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`)\n      .then(({ data }) => setMovieDetails(data))\n      .catch(error => console.log(error));\n  }, [movieId]);\n\n  return (\n    <>\n      <Button to={backLinkLocationRef.current}>Go back</Button>\n      <Description>\n        <div>{movieDetails.poster_path && <img\n          src={`https://image.tmdb.org/t/p/w500${movieDetails.poster_path}`}\n          alt={movieDetails.title}\n          width=\"200px\"\n        />}</div>\n        <div>\n        <h1>\n          {movieDetails.title}\n          {' ('}\n          {movieDetails.release_date && movieDetails.release_date.slice(0, 4)}\n          {')'}\n        </h1>\n        <p>User score: {Math.round(movieDetails.vote_average * 10)}%</p>\n        <h2>Overview</h2>\n        <p>{movieDetails.overview}</p>\n        <h3>Genres</h3>\n        <p>\n          {movieDetails.genres && movieDetails.genres.map(i => i.name + ' ')}\n        </p>\n        </div>\n              </Description>\n      <p>Additional information</p>\n      <ul>\n        <li>\n          <Link to=\"cast\">Cast</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\">Reviews</Link>\n        </li>\n      </ul>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["BASE_URL","API_KEY","Description","styled","Button","Link","movieId","useParams","useState","movieDetails","setMovieDetails","location","useLocation","backLinkLocationRef","useRef","state","from","useEffect","axios","then","data","catch","error","console","log","to","current","poster_path","src","alt","title","width","release_date","slice","Math","round","vote_average","overview","genres","map","i","name","Suspense","fallback"],"sourceRoot":""}